ext {
    def coreBuildFilePath = 'https://raw.githubusercontent.com/grails/grails-core/master/gradle.properties'
    def coreBuildFileUrl = new URL(coreBuildFilePath)
    def versionNumberRegex = /projectVersion=(.*)/
    def grailsVersionList = []
    coreBuildFileUrl.eachLine { line ->
        def matcher = (line =~ versionNumberRegex)
        if(matcher) {
            grailsVersionList << matcher[0][1]
        }
    }
    if(!grailsVersionList) {
        throw new GradleException("Could not find Grails version at $coreBuildFilePath")
    } else if(grailsVersionList.size() > 1) {
        throw new GradleException("Multiple Grails versions (${grailsVersionList}) found at $coreBuildFilePath")
    }
    grailsVersion = grailsVersionList[0]
}

subprojects {
    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        maven { url "https://repo.grails.org/grails/core" }
        maven {
            url "https://oss.jfrog.org/artifactory/oss-snapshot-local"
            mavenContent {
                snapshotsOnly()
            }
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
            content {
                includeVersionByRegex('io\\.micronaut.*', '.*', '.*-SNAPSHOT')
            }
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"

            showExceptions true
            exceptionFormat "full"
            showCauses true
            showStackTraces true
        }
    }
}
